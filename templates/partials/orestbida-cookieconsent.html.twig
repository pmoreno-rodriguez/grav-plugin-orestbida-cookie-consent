{# COOKIES CONSENT SETTINGS
   This template generates the JavaScript configuration for the Orestbida Cookie Consent banner.
   It handles layout, position, and language settings based on the plugin configuration.
#}

{% set config = config.plugins['orestbida-cookie-consent'] %}
{% set lang = lang|default('en') %}

{# Layout and position mapping from config values to library values #}
{% set layout_map = {
    'consent': {
        'box': 'box',
        'box_inline': 'box inline',
        'inline': 'inline',
        'box_wide': 'box wide',
        'cloud': 'cloud',
        'cloud_inline': 'cloud inline',
        'bar': 'bar',
        'bar_inline': 'bar inline'
    },
    'preferences': {
        'box': 'box',
        'bar': 'bar',
        'bar_wide': 'bar wide'
    }
} %}

{% set position_map = {
    'consent': {
        'top_center': 'top center',
        'top_left': 'top left',
        'top_right': 'top right',
        'bottom_center': 'bottom center',
        'bottom_left': 'bottom left',
        'bottom_right': 'bottom right',
        'middle_center': 'middle center',
        'middle_left': 'middle left',
        'middle_right': 'middle right'
    },
    'preferences': {
        'left': 'left',
        'right': 'right'
    }
} %}

{# Get layout and position values with defaults #}
{% set c_layout = layout_map.consent[config.consent_layout] ?? 'box' %}
{% set p_layout = layout_map.preferences[config.preferences_layout] ?? 'box' %}
{% set c_position = position_map.consent[config.consent_position] ?? 'bottom_right' %}
{% set p_position = position_map.preferences[config.preferences_position] ?? 'left' %}

{# Define available cookie categories #}
{% set available_categories = {
    'necessary': { 'readOnly': true },
    'functionality': { 'enabled': config.categories.functionality ?? false },
    'analytics': { 'enabled': config.categories.analytics ?? false },
    'marketing': { 'enabled': config.categories.marketing ?? false }
} %}

{# JavaScript configuration for cookie consent #}
CookieConsent.run({
    {# Global options #}
    autoShow: {{ config.autoshow is defined and config.autoshow ? 'true' : 'false' }},
    hideFromBots: {{ config.hideFromBots is defined and config.hideFromBots ? 'true' : 'false' }},
    disablePageInteraction: {{ config.disablePageInteraction is defined and config.disablePageInteraction ? 'true' : 'false' }},

    guiOptions: {
        consentModal: {
            layout: '{{ c_layout }}',
            position: '{{ c_position }}',
            equalWeightButtons: false,
            flipButtons: false
        },
        preferencesModal: {
            layout: '{{ p_layout }}',
            position: '{{ p_position }}',
            equalWeightButtons: false,
            flipButtons: false
        }
    },
    categories: {
        necessary: {{ available_categories.necessary|json_encode|raw }}
        {% for category, settings in available_categories %}
            {% if category != 'necessary' and settings.enabled %}
                ,{{ category }}: {}
            {% endif %}
        {% endfor %}
    },
    language: {
        default: '{{ lang }}',
        translations: {
            {{ lang }}: {
                consentModal: {
                    title: '{{ config.consent_title|raw }}',
                    description: '{{ config.consent_description|markdown|raw }}',
                    acceptAllBtn: '{{ config.consent_acceptAllBtn|raw }}',
                    acceptNecessaryBtn: '{{ config.consent_acceptNecessaryBtn|raw }}',
                    showPreferencesBtn: '{{ config.consent_showPreferencesBtn|raw }}',
                    {% if config.consent_footer %}footer: '{{ config.consent_footer|raw }}',{% endif %}
                },
                preferencesModal: {
                    title: '{{ config.preferences_title|raw }}',
                    acceptAllBtn: '{{ config.preferences_acceptAllBtn|raw }}',
                    acceptNecessaryBtn: '{{ config.preferences_acceptNecessaryBtn|raw }}',
                    savePreferencesBtn: '{{ config.preferences_savePreferencesBtn|raw }}',
                    closeIconLabel: "X",
                    sections: [
                        {# Usage section is always present #}
                        {
                            title: "{{ config.cookies_sections.usage.title|escape_quotes|raw }}",
                            description: "{{ config.cookies_sections.usage.description|escape_quotes|markdown|raw }}"
                        },
                        {# Necessary category section is always present #}
                        {
                            title: "{{ config.cookies_sections.necessary.title|escape_quotes|raw }}",
                            description: "{{ config.cookies_sections.necessary.description|escape_quotes|markdown|raw }}",
                            linkedCategory: "necessary"
                        },
                        
                        {# Generate optional category sections dynamically #}
                        {% for category, settings in available_categories %}
                            {% if category != 'necessary' and settings.enabled and config.cookies_sections[category] is defined %}
                                {
                                    title: "{{ config.cookies_sections[category].title|escape_quotes|raw }}",
                                    description: "{{ config.cookies_sections[category].description|escape_quotes|markdown|raw }}",
                                    linkedCategory: "{{ category }}"
                                },
                            {% endif %}
                        {% endfor %}
                        
                        {# More info section if available #}
                        {% if config.cookies_sections.more_info.title %}
                        {
                            title: "{{ config.cookies_sections.more_info.title|escape_quotes|raw }}",
                            description: "{{ config.cookies_sections.more_info.description|escape_quotes|markdown|raw }}"
                        }
                        {% endif %}
                    ]
                }
            }
        }
    }
});
{% set show_delay = config.plugins['orestbida-cookie-consent'].show_delay|default(3000) %}

setTimeout(function() {
    CookieConsent.show();
}, {{ show_delay }});